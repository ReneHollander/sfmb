import de.undercouch.gradle.tasks.download.Download
import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath group: 'eu.appsatori', name: 'gradle-fatjar-plugin', version: '0.3'
        classpath group: 'com.github.rodionmoiseev.gradle.plugins', name: 'idea-utils', version: '0.2'
        classpath group: 'de.undercouch', name: 'gradle-download-task', version: '1.2'
    }
}

apply plugin: 'java'
apply plugin: 'eu.appsatori.fatjar'
apply plugin: 'de.undercouch.download'

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'idea-utils'

idea {
    project {
        ipr {
            withXml { xmlProvider ->
                def project = xmlProvider.asNode()
                def runConfigs = new XmlParser().parse(new File("config/intellij_runconfigs.txt"))
                project.append(runConfigs)
            }
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

group = project.property("group")
version = project.property("version")
sourceCompatibility = project.property("sourceversion")

dependencies {
    compile group: 'org.bukkit', name: 'bukkit', version: project.property("bukkitversion"), {
        ext {
            fatJarExclude = true
        }
    }
    compile group: 'org.bukkit', name: 'craftbukkit', version: project.property("bukkitversion"), {
        ext {
            fatJarExclude = true
        }
    }

    compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.7'
    compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'

    testCompile "junit:junit:4.12"
}

processResources {
    filter ReplaceTokens, tokens: [
            "bukkitversion": project.property("bukkitversion"),
            "version"      : project.property("version")
    ]
}

clean {
    delete "final/"
    delete "bukkit/"
}

task deploy(type: Copy, dependsOn: ['build']) {
    from "${buildDir}/libs"
    into "final/"
}

task setupDevServer(type: Copy) {
    from 'config/serverfiles'
    into 'bukkit'
}

task cleanBukkitPlugins() {
    delete "bukkit/plugins"
}

task copyPluginToBukkit(dependsOn: ['build'], type: Copy) {
    from "${buildDir}/libs"
    into "bukkit/plugins"
}

task startDevServer(dependsOn: ['cleanBukkitPlugins', 'copyPluginToBukkit', 'setupDevServer'], type: JavaExec) {
    classpath configurations.compile
    main = "org.bukkit.craftbukkit.Main"
    workingDir = "bukkit/"
    standardInput = System.in
}

tasks.compileJava.dependsOn 'buildBukkit'

jar {
    actions = []
    dependsOn = []
    dependsOn('fatJar')
}

def bukkitBuildDir = new File("$buildDir/bukkit/")

task buildBukkit(dependsOn: ['downloadBuildTool'], type: JavaExec) {
    if (hasBukkit()) {
        enabled = false;
        dependsOn = [];
    }
    main = '-jar'
    args new File(bukkitBuildDir, "BuildTools.jar").getAbsolutePath(), "--rev", project.property("builtoolversion")
    workingDir = bukkitBuildDir
}

task downloadBuildTool(type: Download) {
    bukkitBuildDir.mkdirs()
    src project.property("buildtoolurl")
    dest new File(bukkitBuildDir, "BuildTools.jar")
}

task cleanBukkitBuild() {
    bukkitBuildDir.deleteDir()
}

def hasBukkit() {
    def bukkitGroupId = "org.bukkit"
    def bukkitVersion = project.property("bukkitversion")
    return hasArtifact(bukkitGroupId, "bukkit", bukkitVersion) && hasArtifact(bukkitGroupId, "craftbukkit", bukkitVersion)
}

def hasArtifact(groupId, artifactId, version) {
    def localMavenRepo = new File(new File(ant.properties['user.home'] as String), ".m2/repository/")
    def file = new File(localMavenRepo, groupId.replace('.', '/') + "/" + artifactId + "/" + version + "/")
    return file.exists()
}
